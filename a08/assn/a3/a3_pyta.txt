[CUSTOM PYTA OPTIONS]

# Make sure to register custom options tuple first in `python_ta/__init__.py`
# ===========================================================
# Default max amount of messages for reporter to display. If the value is 0, all messages are displayed.
pyta-number-of-messages = 0

# Set the location of the template for HTMLreporter.
pyta-template-file = template.html.jinja

# Set whether you wish to opt-in to anonymous data collection of errors reported when you run PyTA.
pyta-error-permission = no

# Set whether you wish to opt-in to anonymous data collection of the files you run PyTA on.
pyta-file-permission = no

# Server address for data submission participation.
pyta-server-address = http://127.0.0.1:5000

# Path to messages_config toml file
# messages-config-path = messages.toml

[REPORTS]
# The type of reporter to use to display results. Available PyTA classes are
# PlainReporter, ColorReporter, HTMLReporter, JSONReporter.
# Replaces the pyta-reporter option.
# output-format = python_ta.reporters.HTMLReporter
output-format = python_ta.reporters.PlainReporter

[ELIF]

# Set maximum allowed nesting.
max-nested-blocks = 3

# Set maximum number of branches.
max-branches = 5

# Set maximum number of arguments.
max-args = 5

[FORMAT]

# Set the maximum line length. The maximum line length in pep8 is 80 characters.
max-line-length = 80

# Regexp for a line that is allowed to be longer than the limit.
# ignore-long-lines = ^\s*((# )?<?https?://\S+>?)|(>>>.*)$

[FORBIDDEN IMPORT]

# Set the whitelist of modules that are allowed to be imported
# allowed-import-modules = dataclasses, doctest, unittest, hypothesis, pytest, python_ta, python_ta.contracts,
#                          timeit, typing, __future__
allowed-import-modules=doctest, unittest, python_ta, typing, constants, copy

[FORBIDDEN IO]

# Comma-separated names of functions that are allowed to contain IO actions
allowed-io =

[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s).
disable= R0903, R0904,  # min/max-public-methods
    W0105,  # pointless-string-statement
    C0123,  # Using type() instead of isinstance()
    C0200,  # consider using enumerate
    C0327, C0328,  # line endings LF and CRLF
    W0231, # no __init__, super init not called
    C0413, # wrong-import-position
    W0611,  # W0611 unused import
    R1706,  # consider using ternary
    E9969,  # possibly-undefined
    W1114,  # arguments-out-of-order
    E9997,  # forbidden-global-variables
    C0103,  # to accept top-level constant naming
